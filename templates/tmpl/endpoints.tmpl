package endpoint

import (
	"context"
	"net/url"
	"strings"

	"github.com/go-kit/kit/endpoint"
	"{{ .Package }}"
)

// Endpoints ...
type Endpoints struct {
{{range $method := .Methods }}
{{ $method.Name }}Endpoint endpoint.Endpoint{{end}}
}

// MakeServerEndpoints returns an Endpoints struct where each endpoint invokes
// the corresponding method on the provided service.
func MakeServerEndpoints(s service.Service) Endpoints {
	return Endpoints{
	{{range $method := .Methods }}
		{{ $method.Name }}Endpoint:   Make{{ $method.Name }}Endpoint(s),{{end}}
	}
}

{{ range $method := .Methods }}
// Make{{ $method.Name }}Endpoint returns an endpoint via the passed service.
func Make{{ $method.Name }}Endpoint(s service.Service) endpoint.Endpoint {
	return func(ctx context.Context, request interface{}) (response interface{}, err error) {
		req := request.(postProfileRequest)
		e := s.PostProfile(ctx, req.Profile)
		return postProfileResponse{Err: e}, nil
	}
}
{{end}}